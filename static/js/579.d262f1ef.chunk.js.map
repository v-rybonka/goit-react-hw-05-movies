{"version":3,"file":"static/js/579.d262f1ef.chunk.js","mappings":"8SACAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,oGACPF,EAAAA,GAAAA,IAAA,qCAAwCC,IADjC,cACxBE,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,qDAKlBC,EAAgB,mCAAG,WAAOC,GAAP,uFACPP,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEM,EAAlE,YADO,cACxBJ,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,sDAKhBG,EAAiB,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,GAAAA,IAAA,gBAAmBS,EAAnB,oBAAiCR,EAAjC,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKjBM,EAAc,mCAAG,WAAOD,GAAP,uFACHT,EAAAA,GAAAA,IAAA,gBAAmBS,EAAnB,4BAAyCR,EAAzC,oBADG,cACpBE,EADoB,yBAEnBA,EAASC,KAAKO,MAFK,2CAAH,sDAKdC,EAAiB,mCAAE,WAAOH,GAAP,uFACLT,EAAAA,GAAAA,IAAA,gBAAmBS,EAAnB,4BAAyCR,EAAzC,2BADK,cACtBE,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAF,qD,kJCvBjBQ,EAAaC,EAAAA,GAAAA,KAAH,8KASVC,EAAkBD,EAAAA,GAAAA,MAAH,uQAefE,EAAmBF,EAAAA,GAAAA,OAAH,gR,SClBhBG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KASA,OACE,+BACE,UAACR,EAAD,CAAYS,SAVK,SAAAC,GACnBA,EAAIC,iBAEAJ,EAAMK,SACRP,EAASE,GACTC,EAAS,IAEZ,EAGG,WACE,SAACN,EAAD,CACEW,KAAK,OACLN,MAAOA,EACPO,SAAU,SAAAJ,GAAG,OAAIF,EAASE,EAAIK,OAAOR,MAAxB,KAEf,SAACJ,EAAD,CAAkBU,KAAK,SAAvB,wBAIP,EC1BYG,EAAaf,EAAAA,GAAAA,GAAH,6DAIVgB,GAAgBhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,kEAIbkB,EAAalB,EAAAA,GAAAA,GAAH,+CC6BvB,EAjCe,WACb,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOc,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRjC,EAAK,UAAG6B,EAAaK,IAAI,gBAApB,QAAgC,GACvClC,IACFD,EAAAA,EAAAA,IAAiBC,GAAOmC,MAAK,SAAAT,GAAM,OAAIC,EAAUD,EAAd,GAEtC,GAAE,CAACG,IAMJ,OACE,4BACE,SAACnB,EAAD,CAAWC,SANM,SAAAE,GACnBiB,EAAgB,CAAE9B,MAAOa,GAC1B,IAKIa,EAAOU,OAAS,IACf,SAACd,EAAD,UACGI,EAAOW,KAAI,gBAAGnC,EAAH,EAAGA,GAAIoC,EAAP,EAAOA,MAAP,OACV,SAACb,EAAD,WACE,SAACF,EAAD,CAAegB,GAAE,UAAKrC,GAAMsC,MAAO,CAAEC,KAAMV,GAA3C,SACGO,KAFYpC,EADP,QAWrB,C","sources":["api/api-movies.js","components/pages/Searchbar/SearchBar.styled.jsx","components/pages/Searchbar/Searchbar.jsx","components/pages/Movies/Movies.styled.jsx","components/pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst API_KEY = '3e23bc4805601b1fb14b53b3b99dcd05'\n\nexport const fetchPopularMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n    return response.data.results;\n}\n\nexport const fetchSearchMovie = async (query) => {\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`);\n  return response.data.results;\n}\n\nexport const fetchMovieDetails = async(id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\n\nexport const fetchMovieCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data.cast\n}\n\nexport const fetchMovieReviews =async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return response.data.results\n}","import styled from 'styled-components';\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  border: solid 1px;\n  border-radius: 4px;\n\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\nexport const SearchFormButton = styled.button`\n  border: solid;\n  border-color: orangered;\n  border-radius: 3px;\n  color: #000;\n  padding: 5px 5px;\n  &:hover,\n  :focus {\n    color: white;\n    background-color: orangered;\n  }\n  margin-left: 10px;\n  cursor: pointer;\n  outline: none;\n`;\n","import { useState } from 'react';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n} from './SearchBar.styled';\n\nexport const SearchBar = ({ onSearch }) => {\n  const [value, setValue] = useState('');\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (value.trim()) {\n      onSearch(value);\n      setValue('');\n    }\n  };\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput\n          type=\"text\"\n          value={value}\n          onChange={evt => setValue(evt.target.value)}\n        />\n        <SearchFormButton type=\"submit\">Search</SearchFormButton>\n      </SearchForm>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  list-style: none;\n  color: #000;\n`;\nexport const MoviesNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: #000;\n`;\nexport const MoviesItem = styled.li`\n  margin-bottom: 7px;\n`;\n","import { fetchSearchMovie } from 'api/api-movies';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchBar } from '../Searchbar/Searchbar';\nimport PropTypes from 'prop-types';\nimport { MoviesItem, MoviesList, MoviesNavLink } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (query) {\n      fetchSearchMovie(query).then(movies => setMovies(movies));\n    }\n  }, [searchParams]);\n\n  const handleSearch = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <div>\n      <SearchBar onSearch={handleSearch} />\n      {movies.length > 0 && (\n        <MoviesList>\n          {movies.map(({ id, title }) => (\n            <MoviesItem key={id}>\n              <MoviesNavLink to={`${id}`} state={{ from: location }}>\n                {title}\n              </MoviesNavLink>\n            </MoviesItem>\n          ))}\n        </MoviesList>\n      )}\n    </div>\n  );\n};\nexport default Movies;\nMovies.propTypes = {\n  search: PropTypes.string,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n"],"names":["axios","API_KEY","fetchPopularMovies","response","data","results","fetchSearchMovie","query","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","SearchForm","styled","SearchFormInput","SearchFormButton","SearchBar","onSearch","useState","value","setValue","onSubmit","evt","preventDefault","trim","type","onChange","target","MoviesList","MoviesNavLink","NavLink","MoviesItem","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","then","length","map","title","to","state","from"],"sourceRoot":""}