{"version":3,"file":"static/js/390.54b11457.chunk.js","mappings":"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","sources":["api/api-movies.js","components/pages/MovieDetails/MoviesDetails.styled.jsx","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst API_KEY = '3e23bc4805601b1fb14b53b3b99dcd05'\n\nexport const fetchPopularMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n    return response.data.results;\n}\n\nexport const fetchSearchMovie = async (query) => {\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`);\n  return response.data.results;\n}\n\nexport const fetchMovieDetails = async(id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\n\nexport const fetchMovieCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data.cast\n}\n\nexport const fetchMovieReviews =async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return response.data.results\n}","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nexport const Container = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  padding-bottom: 20px;\n`;\nexport const WrapperText = styled.div`\n  margin-left: 10px;\n`;\nexport const Title = styled.h2`\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\nexport const TextTitle = styled.p`\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 5px;\n`;\nexport const Text = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  margin-bottom: 10px;\n  text-align: justify;\n`;\nexport const LinkNav = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  color: #000;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 5px;\n`;\nexport const LinkBtn = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  border: solid;\n  border-color: orangered;\n  border-radius: 3px;\n  color: #000;\n  margin-bottom: 15px;\n  padding: 5px 5px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { fetchMovieDetails } from 'api/api-movies';\nimport { Suspense } from 'react';\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport poster from '../../img/placeholder_poster.jpeg';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  Container,\n  LinkBtn,\n  LinkNav,\n  Text,\n  TextTitle,\n  Title,\n  Wrapper,\n  WrapperText,\n} from './MoviesDetails.styled';\n\nconst INITIAL_DATA = {\n  title: '',\n  poster_path: '',\n  vote_average: '',\n  overview: '',\n  genres: [],\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(INITIAL_DATA);\n  const location = useLocation();\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovie).catch('error');\n  }, [movieId]);\n\n  const { title, poster_path, vote_average, overview, genres } = movie;\n\n  return (\n    <Container>\n      <LinkBtn to={location.state?.from ?? '/'}>Go Back</LinkBtn>\n      <Wrapper>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : poster\n          }\n          alt={title}\n        />\n        <WrapperText>\n          <Title>{title}</Title>\n          <Text>User score: {vote_average * 10} %</Text>\n          <TextTitle>Overview</TextTitle>\n          <Text>{overview}</Text>\n          <TextTitle>Genres</TextTitle>\n          <Text>{genres.map(genre => genre.name).join(', ')}</Text>\n        </WrapperText>\n      </Wrapper>\n      <ul>\n        Additional information\n        <li>\n          <LinkNav to=\"cast\" state={{ from: location.state?.from ?? '/' }}>\n            Cast\n          </LinkNav>\n        </li>\n        <li>\n          <LinkNav to=\"reviews\" state={{ from: location.state?.from ?? '/' }}>\n            Reviews\n          </LinkNav>\n        </li>\n      </ul>\n      <Suspense fallback={<h1>LOADING...</h1>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["axios","API_KEY","fetchPopularMovies","response","data","results","fetchSearchMovie","query","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","Container","styled","Wrapper","WrapperText","Title","TextTitle","Text","LinkNav","NavLink","LinkBtn","INITIAL_DATA","title","poster_path","vote_average","overview","genres","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","then","catch","to","state","from","src","poster","alt","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}