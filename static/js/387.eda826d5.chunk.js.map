{"version":3,"file":"static/js/387.eda826d5.chunk.js","mappings":"8SACAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,oGACPF,EAAAA,GAAAA,IAAA,qCAAwCC,IADjC,cACxBE,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,qDAKlBC,EAAgB,mCAAG,WAAOC,GAAP,uFACPP,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEM,EAAlE,YADO,cACxBJ,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,sDAKhBG,EAAiB,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,GAAAA,IAAA,gBAAmBS,EAAnB,oBAAiCR,EAAjC,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKjBM,EAAc,mCAAG,WAAOD,GAAP,uFACHT,EAAAA,GAAAA,IAAA,gBAAmBS,EAAnB,4BAAyCR,EAAzC,oBADG,cACpBE,EADoB,yBAEnBA,EAASC,KAAKO,MAFK,2CAAH,sDAKdC,EAAiB,mCAAE,WAAOH,GAAP,uFACLT,EAAAA,GAAAA,IAAA,gBAAmBS,EAAnB,4BAAyCR,EAAzC,2BADK,cACtBE,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAF,qD,wHCtBjBQ,EAAeC,EAAAA,GAAAA,GAAH,8GAMZC,EAAcD,EAAAA,GAAAA,EAAH,sI,kBCyBxB,EA3BgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAkBI,GAASM,KAAKF,EACjC,GAAE,CAACJ,KAEF,8BACGG,EAAQI,OAAS,GAChB,wBACGJ,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASjB,EAApB,EAAoBA,GAApB,OACX,yBACE,4BACE,UAACI,EAAD,sBAAuBY,MACvB,SAACV,EAAD,UAAcW,QAHTjB,EADE,OAUf,qDAIP,C","sources":["api/api-movies.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst API_KEY = '3e23bc4805601b1fb14b53b3b99dcd05'\n\nexport const fetchPopularMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n    return response.data.results;\n}\n\nexport const fetchSearchMovie = async (query) => {\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`);\n  return response.data.results;\n}\n\nexport const fetchMovieDetails = async(id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\n\nexport const fetchMovieCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data.cast\n}\n\nexport const fetchMovieReviews =async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return response.data.results\n}","import styled from 'styled-components';\n\nexport const ReviewsTitle = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 5px;\n  margin-left: 10px;\n`;\nexport const ReviewsText = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  margin-bottom: 10px;\n  margin-left: 5px;\n  text-align: justify;\n`;\n","import { fetchMovieReviews } from 'api/api-movies';\nimport { useEffect, useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { ReviewsText, ReviewsTitle } from './Reviews.styled';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <div>\n                <ReviewsTitle>Author: {author}</ReviewsTitle>\n                <ReviewsText>{content}</ReviewsText>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>There is no reviews yet!</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n\n// Reviews.propTypes = {\n//   id: PropTypes.string.isRequired,\n// };\n"],"names":["axios","API_KEY","fetchPopularMovies","response","data","results","fetchSearchMovie","query","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","ReviewsTitle","styled","ReviewsText","movieId","useParams","useState","reviews","setReviews","useEffect","then","length","map","author","content"],"sourceRoot":""}