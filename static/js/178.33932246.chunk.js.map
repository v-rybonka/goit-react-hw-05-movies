{"version":3,"file":"static/js/178.33932246.chunk.js","mappings":"8SACAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,oGACPF,EAAAA,GAAAA,IAAA,qCAAwCC,IADjC,cACxBE,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,qDAKlBC,EAAgB,mCAAG,WAAOC,GAAP,uFACPP,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEM,EAAlE,YADO,cACxBJ,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,sDAKhBG,EAAiB,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,GAAAA,IAAA,gBAAmBS,EAAnB,oBAAiCR,EAAjC,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKjBM,EAAc,mCAAG,WAAOD,GAAP,uFACHT,EAAAA,GAAAA,IAAA,gBAAmBS,EAAnB,4BAAyCR,EAAzC,oBADG,cACpBE,EADoB,yBAEnBA,EAASC,KAAKO,MAFK,2CAAH,sDAKdC,EAAiB,mCAAE,WAAOH,GAAP,uFACLT,EAAAA,GAAAA,IAAA,gBAAmBS,EAAnB,4BAAyCR,EAAzC,2BADK,cACtBE,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAF,qD,2ICrBjBQ,EAAcC,EAAAA,GAAAA,GAAH,gDAGXC,EAAaD,EAAAA,GAAAA,GAAH,mQAaVE,EAAaF,EAAAA,GAAAA,GAAH,oMAMVG,EAAkBH,EAAAA,GAAAA,IAAH,oRAcfI,GAAgBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kEAIbM,EAAaN,EAAAA,GAAAA,EAAH,8GAMVO,EAAOP,EAAAA,GAAAA,EAAH,kE,SCJjB,EAhCa,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAKA,IAJAC,EAAAA,EAAAA,YAAU,YACRvB,EAAAA,EAAAA,MAAqBwB,MAAK,SAAAH,GAAM,OAAIC,EAAUD,EAAd,GACjC,GAAE,IAEEA,EAGL,OACE,iCACE,SAACV,EAAD,4BACA,SAACE,EAAD,UACGQ,EAAOI,KAAI,YAA+C,IAA5ClB,EAA2C,EAA3CA,GAAImB,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACtC,OACE,UAACd,EAAD,YACE,UAACE,EAAD,CAAea,GAAE,kBAAatB,GAA9B,WACE,SAACQ,EAAD,CACEe,IAAG,yCAAoCF,GACvCG,IAAI,MAEN,SAACb,EAAD,UAAaQ,QAGf,SAACP,EAAD,UAAOQ,MATQpB,EAYpB,QAIR,C","sources":["api/api-movies.js","components/pages/HomePage/Home.styled.jsx","components/pages/HomePage/Home.jsx"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst API_KEY = '3e23bc4805601b1fb14b53b3b99dcd05'\n\nexport const fetchPopularMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n    return response.data.results;\n}\n\nexport const fetchSearchMovie = async (query) => {\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`);\n  return response.data.results;\n}\n\nexport const fetchMovieDetails = async(id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\n\nexport const fetchMovieCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data.cast\n}\n\nexport const fetchMovieReviews =async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return response.data.results\n}","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const TitleMovies = styled.h1`\n  margin-bottom: 15px;\n`;\nexport const MoviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 32px);\n\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const MoviesItem = styled.li`\n  padding: 10px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const MoviesItemImage = styled.img`\n  display: block;\n  max-width: 100%;\n  height: 460px;\n  width: 100%;\n\n  padding-bottom: 10px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const MoviesNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: #000;\n`;\nexport const MoviesText = styled.p`\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 5px;\n  padding-left: 5px;\n`;\nexport const Text = styled.p`\n  font-size: 16px;\n  padding-left: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchPopularMovies } from '../../../api/api-movies';\nimport {\n  MoviesItem,\n  MoviesItemImage,\n  MoviesList,\n  MoviesNavLink,\n  MoviesText,\n  Text,\n  TitleMovies,\n} from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchPopularMovies().then(movies => setMovies(movies));\n  }, []);\n\n  if (!movies) {\n    return;\n  }\n  return (\n    <>\n      <TitleMovies>Trending now</TitleMovies>\n      <MoviesList>\n        {movies.map(({ id, title, release_date, poster_path }) => {\n          return (\n            <MoviesItem key={id}>\n              <MoviesNavLink to={`/movies/${id}`}>\n                <MoviesItemImage\n                  src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                  alt=\"\"\n                />\n                <MoviesText>{title}</MoviesText>\n              </MoviesNavLink>\n\n              <Text>{release_date}</Text>\n            </MoviesItem>\n          );\n        })}\n      </MoviesList>\n    </>\n  );\n};\nexport default Home;\nHome.propTypes = {\n  movies: PropTypes.array,\n};\n"],"names":["axios","API_KEY","fetchPopularMovies","response","data","results","fetchSearchMovie","query","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","TitleMovies","styled","MoviesList","MoviesItem","MoviesItemImage","MoviesNavLink","NavLink","MoviesText","Text","useState","movies","setMovies","useEffect","then","map","title","release_date","poster_path","to","src","alt"],"sourceRoot":""}